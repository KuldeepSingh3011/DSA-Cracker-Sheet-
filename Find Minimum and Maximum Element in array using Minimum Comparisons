// Find minimum & maximum element of the array in  minimum number of comparisons 
// Question Link :https://www.geeksforgeeks.org/maximum-and-minimum-in-an-array/
// Number of comparisons used will be:
//                  if n is odd : 3*(n-1)/2
//                  if n is even: 1 + 3*(n-2)/2 = 3n/2 -2
#include<bits/stdc++.h>
using namespace std;
struct Point{
    int min;
    int max;
};
struct Point getMinMax(int arr[],int n){
    struct Point minmax;
    int i;
    if(n&1){
        minmax.min = arr[0];
        minmax.max = arr[0];
        i=1;
    }
    else{
        if(arr[0] > arr[1]){
            minmax.min = arr[1];
            minmax.max = arr[0];
        }   
        else{
            minmax.min=arr[0];
            minmax.max=arr[1];
        }
        i = 2;
    }
    while(i < n-1){
        if(arr[i] > arr[i+1]){
            if(minmax.max < arr[i])
            minmax.max = arr[i];
            if(minmax.min > arr[i+1])
            minmax.min = arr[i+1];
        }
        else{
            if(minmax.max < arr[i+1])
            minmax.max = arr[i+1];
            if(minmax.min > arr[i])
            minmax.min = arr[i];
        }
        i += 2;
    }
    return minmax;
}
void solve(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    cin>>arr[i];
    struct Point p=getMinMax(arr,n);
    cout<<"Minimum element is:"<<p.min;
    cout<<"\nMaximum element is:"<<p.max;
}
int main(){
    int t;
    cin>>t;
    while(t--)
    solve();
}
